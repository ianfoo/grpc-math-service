// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{0}
}
func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (dst *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(dst, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *AddRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type AddResponse struct {
	Sum                  int64    `protobuf:"varint,1,opt,name=sum" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{1}
}
func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (dst *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(dst, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type SubtractRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubtractRequest) Reset()         { *m = SubtractRequest{} }
func (m *SubtractRequest) String() string { return proto.CompactTextString(m) }
func (*SubtractRequest) ProtoMessage()    {}
func (*SubtractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{2}
}
func (m *SubtractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtractRequest.Unmarshal(m, b)
}
func (m *SubtractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtractRequest.Marshal(b, m, deterministic)
}
func (dst *SubtractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtractRequest.Merge(dst, src)
}
func (m *SubtractRequest) XXX_Size() int {
	return xxx_messageInfo_SubtractRequest.Size(m)
}
func (m *SubtractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubtractRequest proto.InternalMessageInfo

func (m *SubtractRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SubtractRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type SubtractResponse struct {
	Difference           int64    `protobuf:"varint,1,opt,name=difference" json:"difference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubtractResponse) Reset()         { *m = SubtractResponse{} }
func (m *SubtractResponse) String() string { return proto.CompactTextString(m) }
func (*SubtractResponse) ProtoMessage()    {}
func (*SubtractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{3}
}
func (m *SubtractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtractResponse.Unmarshal(m, b)
}
func (m *SubtractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtractResponse.Marshal(b, m, deterministic)
}
func (dst *SubtractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtractResponse.Merge(dst, src)
}
func (m *SubtractResponse) XXX_Size() int {
	return xxx_messageInfo_SubtractResponse.Size(m)
}
func (m *SubtractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubtractResponse proto.InternalMessageInfo

func (m *SubtractResponse) GetDifference() int64 {
	if m != nil {
		return m.Difference
	}
	return 0
}

type MultiplyRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplyRequest) Reset()         { *m = MultiplyRequest{} }
func (m *MultiplyRequest) String() string { return proto.CompactTextString(m) }
func (*MultiplyRequest) ProtoMessage()    {}
func (*MultiplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{4}
}
func (m *MultiplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplyRequest.Unmarshal(m, b)
}
func (m *MultiplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplyRequest.Marshal(b, m, deterministic)
}
func (dst *MultiplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplyRequest.Merge(dst, src)
}
func (m *MultiplyRequest) XXX_Size() int {
	return xxx_messageInfo_MultiplyRequest.Size(m)
}
func (m *MultiplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplyRequest proto.InternalMessageInfo

func (m *MultiplyRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *MultiplyRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type MultiplyResponse struct {
	Product              int64    `protobuf:"varint,1,opt,name=product" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplyResponse) Reset()         { *m = MultiplyResponse{} }
func (m *MultiplyResponse) String() string { return proto.CompactTextString(m) }
func (*MultiplyResponse) ProtoMessage()    {}
func (*MultiplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{5}
}
func (m *MultiplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplyResponse.Unmarshal(m, b)
}
func (m *MultiplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplyResponse.Marshal(b, m, deterministic)
}
func (dst *MultiplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplyResponse.Merge(dst, src)
}
func (m *MultiplyResponse) XXX_Size() int {
	return xxx_messageInfo_MultiplyResponse.Size(m)
}
func (m *MultiplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplyResponse proto.InternalMessageInfo

func (m *MultiplyResponse) GetProduct() int64 {
	if m != nil {
		return m.Product
	}
	return 0
}

type DivideRequest struct {
	Dividend             int64    `protobuf:"varint,1,opt,name=dividend" json:"dividend,omitempty"`
	Divisor              int64    `protobuf:"varint,2,opt,name=divisor" json:"divisor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivideRequest) Reset()         { *m = DivideRequest{} }
func (m *DivideRequest) String() string { return proto.CompactTextString(m) }
func (*DivideRequest) ProtoMessage()    {}
func (*DivideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{6}
}
func (m *DivideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivideRequest.Unmarshal(m, b)
}
func (m *DivideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivideRequest.Marshal(b, m, deterministic)
}
func (dst *DivideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivideRequest.Merge(dst, src)
}
func (m *DivideRequest) XXX_Size() int {
	return xxx_messageInfo_DivideRequest.Size(m)
}
func (m *DivideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DivideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DivideRequest proto.InternalMessageInfo

func (m *DivideRequest) GetDividend() int64 {
	if m != nil {
		return m.Dividend
	}
	return 0
}

func (m *DivideRequest) GetDivisor() int64 {
	if m != nil {
		return m.Divisor
	}
	return 0
}

type DivideResponse struct {
	Quotient             int64    `protobuf:"varint,1,opt,name=quotient" json:"quotient,omitempty"`
	Remainder            int64    `protobuf:"varint,2,opt,name=remainder" json:"remainder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivideResponse) Reset()         { *m = DivideResponse{} }
func (m *DivideResponse) String() string { return proto.CompactTextString(m) }
func (*DivideResponse) ProtoMessage()    {}
func (*DivideResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_7ac450692d401d53, []int{7}
}
func (m *DivideResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivideResponse.Unmarshal(m, b)
}
func (m *DivideResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivideResponse.Marshal(b, m, deterministic)
}
func (dst *DivideResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivideResponse.Merge(dst, src)
}
func (m *DivideResponse) XXX_Size() int {
	return xxx_messageInfo_DivideResponse.Size(m)
}
func (m *DivideResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DivideResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DivideResponse proto.InternalMessageInfo

func (m *DivideResponse) GetQuotient() int64 {
	if m != nil {
		return m.Quotient
	}
	return 0
}

func (m *DivideResponse) GetRemainder() int64 {
	if m != nil {
		return m.Remainder
	}
	return 0
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "pb.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "pb.AddResponse")
	proto.RegisterType((*SubtractRequest)(nil), "pb.SubtractRequest")
	proto.RegisterType((*SubtractResponse)(nil), "pb.SubtractResponse")
	proto.RegisterType((*MultiplyRequest)(nil), "pb.MultiplyRequest")
	proto.RegisterType((*MultiplyResponse)(nil), "pb.MultiplyResponse")
	proto.RegisterType((*DivideRequest)(nil), "pb.DivideRequest")
	proto.RegisterType((*DivideResponse)(nil), "pb.DivideResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MatherClient is the client API for Mather service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatherClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Subtract(ctx context.Context, in *SubtractRequest, opts ...grpc.CallOption) (*SubtractResponse, error)
	Multiply(ctx context.Context, in *MultiplyRequest, opts ...grpc.CallOption) (*MultiplyResponse, error)
	Divide(ctx context.Context, in *DivideRequest, opts ...grpc.CallOption) (*DivideResponse, error)
}

type matherClient struct {
	cc *grpc.ClientConn
}

func NewMatherClient(cc *grpc.ClientConn) MatherClient {
	return &matherClient{cc}
}

func (c *matherClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/pb.Mather/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matherClient) Subtract(ctx context.Context, in *SubtractRequest, opts ...grpc.CallOption) (*SubtractResponse, error) {
	out := new(SubtractResponse)
	err := c.cc.Invoke(ctx, "/pb.Mather/Subtract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matherClient) Multiply(ctx context.Context, in *MultiplyRequest, opts ...grpc.CallOption) (*MultiplyResponse, error) {
	out := new(MultiplyResponse)
	err := c.cc.Invoke(ctx, "/pb.Mather/Multiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matherClient) Divide(ctx context.Context, in *DivideRequest, opts ...grpc.CallOption) (*DivideResponse, error) {
	out := new(DivideResponse)
	err := c.cc.Invoke(ctx, "/pb.Mather/Divide", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Mather service

type MatherServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Subtract(context.Context, *SubtractRequest) (*SubtractResponse, error)
	Multiply(context.Context, *MultiplyRequest) (*MultiplyResponse, error)
	Divide(context.Context, *DivideRequest) (*DivideResponse, error)
}

func RegisterMatherServer(s *grpc.Server, srv MatherServer) {
	s.RegisterService(&_Mather_serviceDesc, srv)
}

func _Mather_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatherServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mather/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatherServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mather_Subtract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubtractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatherServer).Subtract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mather/Subtract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatherServer).Subtract(ctx, req.(*SubtractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mather_Multiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatherServer).Multiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mather/Multiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatherServer).Multiply(ctx, req.(*MultiplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mather_Divide_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DivideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatherServer).Divide(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mather/Divide",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatherServer).Divide(ctx, req.(*DivideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mather_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Mather",
	HandlerType: (*MatherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Mather_Add_Handler,
		},
		{
			MethodName: "Subtract",
			Handler:    _Mather_Subtract_Handler,
		},
		{
			MethodName: "Multiply",
			Handler:    _Mather_Multiply_Handler,
		},
		{
			MethodName: "Divide",
			Handler:    _Mather_Divide_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_7ac450692d401d53) }

var fileDescriptor_service_7ac450692d401d53 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4f, 0xc2, 0x30,
	0x18, 0x66, 0x90, 0x20, 0xbe, 0xca, 0x87, 0xd5, 0x03, 0x59, 0x8c, 0x9a, 0x9e, 0x38, 0x28, 0x89,
	0x78, 0xf0, 0x4c, 0xa2, 0x17, 0x13, 0x2e, 0xf8, 0x0b, 0xd6, 0xf5, 0x25, 0x36, 0x81, 0xb5, 0xf4,
	0x83, 0xc4, 0x5f, 0xea, 0xdf, 0x31, 0x65, 0xed, 0x36, 0x76, 0xe2, 0xd6, 0xe7, 0xd9, 0xf3, 0x91,
	0x3d, 0x2d, 0x0c, 0x0d, 0xea, 0x83, 0xc8, 0x71, 0xae, 0xb4, 0xb4, 0x92, 0x74, 0x15, 0xa3, 0x33,
	0x80, 0x25, 0xe7, 0x6b, 0xdc, 0x3b, 0x34, 0x96, 0x5c, 0x43, 0x92, 0x4d, 0x93, 0xa7, 0x64, 0xd6,
	0x5b, 0x27, 0x99, 0x47, 0x6c, 0xda, 0x2d, 0x11, 0xa3, 0x8f, 0x70, 0x75, 0x54, 0x1a, 0x25, 0x0b,
	0x83, 0x64, 0x02, 0x3d, 0xe3, 0x76, 0x41, 0xec, 0x8f, 0xf4, 0x05, 0xc6, 0xdf, 0x8e, 0x59, 0x9d,
	0xe5, 0xf6, 0x9c, 0xbc, 0x05, 0x4c, 0x6a, 0x79, 0x08, 0x7d, 0x00, 0xe0, 0x62, 0xb3, 0x41, 0x8d,
	0x45, 0x8e, 0xc1, 0xd8, 0x60, 0x7c, 0xc5, 0xca, 0x6d, 0xad, 0x50, 0xdb, 0xdf, 0x73, 0x2a, 0x9e,
	0x61, 0x52, 0xcb, 0x43, 0xc5, 0x14, 0x2e, 0x94, 0x96, 0xdc, 0xe5, 0x36, 0xb8, 0x22, 0xa4, 0x9f,
	0x30, 0xfc, 0x10, 0x07, 0xc1, 0x31, 0x46, 0xa7, 0x30, 0xe0, 0x47, 0xa2, 0xe0, 0x41, 0x5b, 0x61,
	0x1f, 0xe3, 0xcf, 0x46, 0xea, 0x50, 0x17, 0x21, 0xfd, 0x82, 0x51, 0x8c, 0x09, 0x95, 0x29, 0x0c,
	0xf6, 0x4e, 0x5a, 0x81, 0x45, 0xec, 0xac, 0x30, 0xb9, 0x87, 0x4b, 0x8d, 0xbb, 0x4c, 0x14, 0x1c,
	0x63, 0x52, 0x4d, 0x2c, 0xfe, 0x12, 0xe8, 0xaf, 0x32, 0xfb, 0x83, 0x9a, 0xcc, 0xa0, 0xb7, 0xe4,
	0x9c, 0x8c, 0xe6, 0x8a, 0xcd, 0xeb, 0x1b, 0x4b, 0xc7, 0x15, 0x2e, 0xcb, 0x68, 0x87, 0xbc, 0xc3,
	0x20, 0x0e, 0x4b, 0x6e, 0xfd, 0xe7, 0xd6, 0xad, 0xa4, 0x77, 0xa7, 0x64, 0xd3, 0x18, 0xe7, 0x2a,
	0x8d, 0xad, 0xad, 0x4b, 0x63, 0x7b, 0x51, 0xda, 0x21, 0xaf, 0xd0, 0x2f, 0x7f, 0x99, 0xdc, 0x78,
	0xc5, 0xc9, 0x8a, 0x29, 0x69, 0x52, 0xd1, 0xc2, 0xfa, 0xc7, 0x27, 0xf8, 0xf6, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x34, 0x7c, 0x23, 0xaf, 0x93, 0x02, 0x00, 0x00,
}
